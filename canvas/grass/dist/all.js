'use strict';

/*global $, R*/

var getCss = R.invoker(1, 'css');
var setCss = R.invoker(2, 'css');

var getAttr = R.invoker(1, 'attr');
var setAttr = R.invoker(2, 'attr');

var width = getCss('width');
var height = getCss('height');

/*global $, R*/

var equalsW = R.curry(function (val1, val2) {
  return val1 == val2;
});

/*global $, R*/

function createCanvas() {
  var canvas = $('<canvas>', {
    id: 'mainCanvas'
  }).css({
    'width': '500px',
    'height': '300px',
    'border': '1px solid #eeeeee',
    'margin': '0 auto'
  });
  return canvas;
}

/*------------------------------------------------------------*/
var vec = function vector2(x, y) {
  return { x: x, y: y };
};

/*------------------------------------------------------------*/

var canvas = createCanvas().appendTo('body');

var c = canvas[0].getContext('2d');

c.imageSmoothingEnabled = false;

/**
 * @param {CanvasRenderingContext2D} context - Rendering context
 * @param {string} color - CSS style color
 * @param {Vector2} size - Width and height in pixels
 * @param {Vector2} pos - Top-left corner position in pixels
 */
var drawRec = R.curry(function (context, color, size, pos) {
  context.fillStyle = color;
  context.fillRect(pos.x, pos.y, size.x, size.y);
})(c);

drawRec('rgba(255, 170, 200, 0.5)', vec(80, 80), vec(35, 30));

c.fillStyle = 'rgba(200, 255, 170, 0.7)';
c.fillRect(10, 10, 80, 80);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRvbS5qcyIsInV0aWxzLmpzIiwibWFpbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBRUEsSUFBQSxNQUFBLEdBQUEsQ0FBQSxDQUFBLE9BQUEsQ0FBQSxDQUFBLEVBQUEsS0FBQSxDQUFBLENBQUE7QUFDQSxJQUFBLE1BQUEsR0FBQSxDQUFBLENBQUEsT0FBQSxDQUFBLENBQUEsRUFBQSxLQUFBLENBQUEsQ0FBQTs7QUFFQSxJQUFBLE9BQUEsR0FBQSxDQUFBLENBQUEsT0FBQSxDQUFBLENBQUEsRUFBQSxNQUFBLENBQUEsQ0FBQTtBQUNBLElBQUEsT0FBQSxHQUFBLENBQUEsQ0FBQSxPQUFBLENBQUEsQ0FBQSxFQUFBLE1BQUEsQ0FBQSxDQUFBOztBQUVBLElBQUEsS0FBQSxHQUFBLE1BQUEsQ0FBQSxPQUFBLENBQUEsQ0FBQTtBQUNBLElBQUEsTUFBQSxHQUFBLE1BQUEsQ0FBQSxRQUFBLENBQUE7Ozs7QUFBQSxBQ1BBLElBQUEsT0FBQSxHQUFBLENBQUEsQ0FBQSxLQUFBLENBQUEsVUFBQSxJQUFBLEVBQUEsSUFBQTtTQUFBLElBQUEsSUFBQSxJQUFBO0NBQUEsQ0FBQTs7OztBQUFBLEFDQUEsU0FBQSxZQUFBLEdBQUE7QUFDQSxNQUFBLE1BQUEsR0FBQSxDQUFBLENBQUEsVUFBQSxFQUFBO0FBQ0EsTUFBQSxFQUFBLFlBQUE7R0FDQSxDQUFBLENBQUEsR0FBQSxDQUFBO0FBQ0EsV0FBQSxFQUFBLE9BQUE7QUFDQSxZQUFBLEVBQUEsT0FBQTtBQUNBLFlBQUEsRUFBQSxtQkFBQTtBQUNBLFlBQUEsRUFBQSxRQUFBO0dBQ0EsQ0FBQSxDQUFBO0FBQ0EsU0FBQSxNQUFBLENBQUE7Q0FDQTs7O0FBQUEsQUFHQSxJQUFBLEdBQUEsR0FBQSxTQUFBLE9BQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBO0FBQ0EsU0FBQSxFQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxDQUFBO0NBQ0E7Ozs7QUFBQSxBQUlBLElBQUEsTUFBQSxHQUFBLFlBQUEsRUFBQSxDQUFBLFFBQUEsQ0FBQSxNQUFBLENBQUEsQ0FBQTs7QUFFQSxJQUFBLENBQUEsR0FBQSxNQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsVUFBQSxDQUFBLElBQUEsQ0FBQSxDQUFBOztBQUVBLENBQUEsQ0FBQSxxQkFBQSxHQUFBLEtBQUE7Ozs7Ozs7O0FBQUEsQUFRQSxJQUFBLE9BQUEsR0FBQSxDQUFBLENBQUEsS0FBQSxDQUFBLFVBQUEsT0FBQSxFQUFBLEtBQUEsRUFBQSxJQUFBLEVBQUEsR0FBQSxFQUFBO0FBQ0EsU0FBQSxDQUFBLFNBQUEsR0FBQSxLQUFBLENBQUE7QUFDQSxTQUFBLENBQUEsUUFBQSxDQUFBLEdBQUEsQ0FBQSxDQUFBLEVBQUEsR0FBQSxDQUFBLENBQUEsRUFBQSxJQUFBLENBQUEsQ0FBQSxFQUFBLElBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTtDQUNBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTs7QUFFQSxPQUFBLENBQUEsMEJBQUEsRUFBQSxHQUFBLENBQUEsRUFBQSxFQUFBLEVBQUEsQ0FBQSxFQUFBLEdBQUEsQ0FBQSxFQUFBLEVBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQTs7QUFFQSxDQUFBLENBQUEsU0FBQSxHQUFBLDBCQUFBLENBQUE7QUFDQSxDQUFBLENBQUEsUUFBQSxDQUFBLEVBQUEsRUFBQSxFQUFBLEVBQUEsRUFBQSxFQUFBLEVBQUEsQ0FBQSxDQUFBIiwiZmlsZSI6ImFsbC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qZ2xvYmFsICQsIFIqL1xuXG52YXIgZ2V0Q3NzID0gUi5pbnZva2VyKDEsICdjc3MnKTtcbnZhciBzZXRDc3MgPSBSLmludm9rZXIoMiwgJ2NzcycpO1xuXG52YXIgZ2V0QXR0ciA9IFIuaW52b2tlcigxLCAnYXR0cicpO1xudmFyIHNldEF0dHIgPSBSLmludm9rZXIoMiwgJ2F0dHInKTtcblxudmFyIHdpZHRoID0gZ2V0Q3NzKCd3aWR0aCcpO1xudmFyIGhlaWdodCA9IGdldENzcygnaGVpZ2h0Jyk7XG4iLCIvKmdsb2JhbCAkLCBSKi9cblxudmFyIGVxdWFsc1cgPSBSLmN1cnJ5KCh2YWwxLCB2YWwyKSA9PiB2YWwxID09IHZhbDIpO1xuIiwiLypnbG9iYWwgJCwgUiovXG5cbmZ1bmN0aW9uIGNyZWF0ZUNhbnZhcygpIHtcbiAgdmFyIGNhbnZhcyA9ICQoJzxjYW52YXM+Jywge1xuICAgIGlkOiAnbWFpbkNhbnZhcydcbiAgfSkuY3NzKHtcbiAgICAnd2lkdGgnICAgICAgICAgICAgOiAnNTAwcHgnLFxuICAgICdoZWlnaHQnICAgICAgICAgICA6ICczMDBweCcsXG4gICAgJ2JvcmRlcicgICAgICAgICAgIDogJzFweCBzb2xpZCAjZWVlZWVlJyxcbiAgICAnbWFyZ2luJyAgICAgICAgICAgOiAnMCBhdXRvJ1xuICB9KTtcbiAgcmV0dXJuIGNhbnZhcztcbn1cblxuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xudmFyIHZlYyA9IGZ1bmN0aW9uIHZlY3RvcjIoeCwgeSkge1xuICByZXR1cm4geyB4OiB4LCB5OiB5IH07XG59O1xuXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbnZhciBjYW52YXMgPSBjcmVhdGVDYW52YXMoKS5hcHBlbmRUbygnYm9keScpO1xuXG52YXIgYyA9IGNhbnZhc1swXS5nZXRDb250ZXh0KCcyZCcpO1xuXG5jLmltYWdlU21vb3RoaW5nRW5hYmxlZCA9IGZhbHNlO1xuXG4vKipcbiAqIEBwYXJhbSB7Q2FudmFzUmVuZGVyaW5nQ29udGV4dDJEfSBjb250ZXh0IC0gUmVuZGVyaW5nIGNvbnRleHRcbiAqIEBwYXJhbSB7c3RyaW5nfSBjb2xvciAtIENTUyBzdHlsZSBjb2xvclxuICogQHBhcmFtIHtWZWN0b3IyfSBzaXplIC0gV2lkdGggYW5kIGhlaWdodCBpbiBwaXhlbHNcbiAqIEBwYXJhbSB7VmVjdG9yMn0gcG9zIC0gVG9wLWxlZnQgY29ybmVyIHBvc2l0aW9uIGluIHBpeGVsc1xuICovXG52YXIgZHJhd1JlYyA9IFIuY3VycnkoZnVuY3Rpb24oY29udGV4dCwgY29sb3IsIHNpemUsIHBvcykge1xuICBjb250ZXh0LmZpbGxTdHlsZSA9IGNvbG9yO1xuICBjb250ZXh0LmZpbGxSZWN0KHBvcy54LCBwb3MueSwgc2l6ZS54LCBzaXplLnkpO1xufSkoYyk7XG5cbmRyYXdSZWMoJ3JnYmEoMjU1LCAxNzAsIDIwMCwgMC41KScsIHZlYyg4MCwgODApLCB2ZWMoMzUsIDMwKSk7XG5cbmMuZmlsbFN0eWxlID0gJ3JnYmEoMjAwLCAyNTUsIDE3MCwgMC43KSc7XG5jLmZpbGxSZWN0KDEwLCAxMCwgODAsIDgwKTtcbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
