'use strict';

/*global $, R*/

var equalsW = R.curry(function (val1, val2) {
  return val1 == val2;
});

/*------------------------------------------------------------*/

var isFunction = function isFunction(a) {
  return typeof a === 'function';
};
var whenFunction = R.when(isFunction);
var ifFunction = R.ifElse(isFunction);

var fluentize = R.curry(function (length, methStr) {
  return function (obj) {
    var args = R.concat(R.slice(1, length(arguments), arguments), [obj]);
    return R.apply(R.compose(R.always(obj), R.invoker(length, methStr)), args);
  };
});

/*global $, R*/

/**
 * @param {number} length: Arity of fn.
 * @param {array} args - List of arguments which will be split in arrays of
 *  'length' length.
 */
var repeatApply = R.curry(function (length, fn, args) {
  return map(R.aperture(length), R.apply(fn));
});

var repeatCall = R.partial(R.compose(R.apply(repeatApply), R.concat));

var getCss = R.invoker(1, 'style');
var setCss = fluentize(2, 'style');

var getAttr = R.invoker(1, 'getAttribute');
var setAttr = fluentize(2, 'setAttribute');

var width = R.prop('clientWidth');
var height = R.prop('clientWidth');

/*global $, R*/

function createCanvas() {
  var canvas = setAttr(document.createElement('canvas'), 'id', 'mainCanvas');
  /*.attr({
  'width':  '600px',
  'height': '350px'
  }).css({
    'border': '1px solid #eeeeee',
    'margin': '0 auto'
  });*/
  return canvas;
}

/*------------------------------------------------------------*/
var vec = function vector2(x, y) {
  return { x: x, y: y };
};

/*------------------------------------------------------------*/

var canvas = createCanvas();

var c = canvas.getContext('2d');

c.imageSmoothingEnabled = false;

/**
 * @param {CanvasRenderingContext2D} context - Rendering context
 * @param {string} color - CSS style color
 * @param {Vector2} size - Width and height in pixels
 * @param {Vector2} pos - Top-left corner position in pixels
 */
var drawRec = R.curry(function (context, color, size, pos) {
  context.fillStyle = color;
  context.fillRect(pos.x, pos.y, size.x, size.y);
})(c);

drawRec('rgba(255, 170, 200, 0.5)', vec(80, 80), vec(35, 30));

c.fillStyle = 'rgba(200, 255, 170, 0.7)';
c.fillRect(10, 10, 80, 80);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInV0aWxzLmpzIiwiZG9tLmpzIiwibWFpbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBRUEsSUFBQSxPQUFBLEdBQUEsQ0FBQSxDQUFBLEtBQUEsQ0FBQSxVQUFBLElBQUEsRUFBQSxJQUFBO1NBQUEsSUFBQSxJQUFBLElBQUE7Q0FBQSxDQUFBOzs7O0FBQUEsQUFJQSxJQUFBLFVBQUEsR0FBQSxTQUFBLFVBQUEsQ0FBQSxDQUFBO1NBQUEsT0FBQSxDQUFBLEtBQUEsVUFBQTtDQUFBLENBQUE7QUFDQSxJQUFBLFlBQUEsR0FBQSxDQUFBLENBQUEsSUFBQSxDQUFBLFVBQUEsQ0FBQSxDQUFBO0FBQ0EsSUFBQSxVQUFBLEdBQUEsQ0FBQSxDQUFBLE1BQUEsQ0FBQSxVQUFBLENBQUEsQ0FBQTs7QUFFQSxJQUFBLFNBQUEsR0FBQSxDQUFBLENBQUEsS0FBQSxDQUFBLFVBQUEsTUFBQSxFQUFBLE9BQUE7U0FDQSxVQUFBLEdBQUEsRUFBQTtBQUNBLFFBQUEsSUFBQSxHQUFBLENBQUEsQ0FBQSxNQUFBLENBQ0EsQ0FBQSxDQUFBLEtBQUEsQ0FBQSxDQUFBLEVBQUEsTUFBQSxDQUFBLFNBQUEsQ0FBQSxFQUFBLFNBQUEsQ0FBQSxFQUNBLENBQUEsR0FBQSxDQUFBLENBQUEsQ0FBQTtBQUNBLFdBQUEsQ0FBQSxDQUFBLEtBQUEsQ0FBQSxDQUFBLENBQUEsT0FBQSxDQUNBLENBQUEsQ0FBQSxNQUFBLENBQUEsR0FBQSxDQUFBLEVBQ0EsQ0FBQSxDQUFBLE9BQUEsQ0FBQSxNQUFBLEVBQUEsT0FBQSxDQUFBLENBQUEsRUFDQSxJQUFBLENBQUEsQ0FBQTtHQUNBO0NBQUEsQ0FBQTs7Ozs7Ozs7O0FBQUEsQUNaQSxJQUFBLFdBQUEsR0FBQSxDQUFBLENBQUEsS0FBQSxDQUFBLFVBQUEsTUFBQSxFQUFBLEVBQUEsRUFBQSxJQUFBO1NBQUEsR0FBQSxDQUNBLENBQUEsQ0FBQSxRQUFBLENBQUEsTUFBQSxDQUFBLEVBQ0EsQ0FBQSxDQUFBLEtBQUEsQ0FBQSxFQUFBLENBQUEsQ0FBQTtDQUFBLENBQUEsQ0FBQTs7QUFFQSxJQUFBLFVBQUEsR0FBQSxDQUFBLENBQUEsT0FBQSxDQUNBLENBQUEsQ0FBQSxPQUFBLENBQUEsQ0FBQSxDQUFBLEtBQUEsQ0FBQSxXQUFBLENBQUEsRUFDQSxDQUFBLENBQUEsTUFBQSxDQUFBLENBQUEsQ0FBQTs7QUFFQSxJQUFBLE1BQUEsR0FBQSxDQUFBLENBQUEsT0FBQSxDQUFBLENBQUEsRUFBQSxPQUFBLENBQUEsQ0FBQTtBQUNBLElBQUEsTUFBQSxHQUFBLFNBQUEsQ0FBQSxDQUFBLEVBQUEsT0FBQSxDQUFBLENBQUE7O0FBRUEsSUFBQSxPQUFBLEdBQUEsQ0FBQSxDQUFBLE9BQUEsQ0FBQSxDQUFBLEVBQUEsY0FBQSxDQUFBLENBQUE7QUFDQSxJQUFBLE9BQUEsR0FBQSxTQUFBLENBQUEsQ0FBQSxFQUFBLGNBQUEsQ0FBQSxDQUFBOztBQUVBLElBQUEsS0FBQSxHQUFBLENBQUEsQ0FBQSxJQUFBLENBQUEsYUFBQSxDQUFBLENBQUE7QUFDQSxJQUFBLE1BQUEsR0FBQSxDQUFBLENBQUEsSUFBQSxDQUFBLGFBQUEsQ0FBQTs7OztBQUFBLEFDcEJBLFNBQUEsWUFBQSxHQUFBO0FBQ0EsTUFBQSxNQUFBLEdBQUEsT0FBQSxDQUFBLFFBQUEsQ0FBQSxhQUFBLENBQUEsUUFBQSxDQUFBLEVBQ0EsSUFBQSxFQUFBLFlBQUEsQ0FBQTs7Ozs7Ozs7QUFBQSxBQVFBLFNBQUEsTUFBQSxDQUFBO0NBQ0E7OztBQUFBLEFBR0EsSUFBQSxHQUFBLEdBQUEsU0FBQSxPQUFBLENBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQTtBQUNBLFNBQUEsRUFBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsQ0FBQTtDQUNBOzs7O0FBQUEsQUFJQSxJQUFBLE1BQUEsR0FBQSxZQUFBLEVBQUEsQ0FBQTs7QUFFQSxJQUFBLENBQUEsR0FBQSxNQUFBLENBQUEsVUFBQSxDQUFBLElBQUEsQ0FBQSxDQUFBOztBQUVBLENBQUEsQ0FBQSxxQkFBQSxHQUFBLEtBQUE7Ozs7Ozs7O0FBQUEsQUFRQSxJQUFBLE9BQUEsR0FBQSxDQUFBLENBQUEsS0FBQSxDQUFBLFVBQUEsT0FBQSxFQUFBLEtBQUEsRUFBQSxJQUFBLEVBQUEsR0FBQSxFQUFBO0FBQ0EsU0FBQSxDQUFBLFNBQUEsR0FBQSxLQUFBLENBQUE7QUFDQSxTQUFBLENBQUEsUUFBQSxDQUFBLEdBQUEsQ0FBQSxDQUFBLEVBQUEsR0FBQSxDQUFBLENBQUEsRUFBQSxJQUFBLENBQUEsQ0FBQSxFQUFBLElBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTtDQUNBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTs7QUFFQSxPQUFBLENBQUEsMEJBQUEsRUFBQSxHQUFBLENBQUEsRUFBQSxFQUFBLEVBQUEsQ0FBQSxFQUFBLEdBQUEsQ0FBQSxFQUFBLEVBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQTs7QUFFQSxDQUFBLENBQUEsU0FBQSxHQUFBLDBCQUFBLENBQUE7QUFDQSxDQUFBLENBQUEsUUFBQSxDQUFBLEVBQUEsRUFBQSxFQUFBLEVBQUEsRUFBQSxFQUFBLEVBQUEsQ0FBQSxDQUFBIiwiZmlsZSI6ImFsbC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qZ2xvYmFsICQsIFIqL1xuXG52YXIgZXF1YWxzVyA9IFIuY3VycnkoKHZhbDEsIHZhbDIpID0+IHZhbDEgPT0gdmFsMik7XG5cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblxudmFyIGlzRnVuY3Rpb24gPSAoYSkgPT4gdHlwZW9mIGEgPT09ICdmdW5jdGlvbic7XG52YXIgd2hlbkZ1bmN0aW9uID0gUi53aGVuKGlzRnVuY3Rpb24pO1xudmFyIGlmRnVuY3Rpb24gPSBSLmlmRWxzZShpc0Z1bmN0aW9uKTtcblxudmFyIGZsdWVudGl6ZSA9IFIuY3VycnkoKGxlbmd0aCwgbWV0aFN0cikgPT5cblx0XHRcdFx0XHRcdGZ1bmN0aW9uKG9iaikge1xuXHRcdFx0XHRcdFx0XHR2YXIgYXJncyA9IFIuY29uY2F0KFxuXHRcdFx0XHRcdFx0XHRcdFIuc2xpY2UoMSwgbGVuZ3RoKGFyZ3VtZW50cyksIGFyZ3VtZW50cyksXG5cdFx0XHRcdFx0XHRcdFx0W29ial0pO1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4gUi5hcHBseShSLmNvbXBvc2UoXG5cdFx0XHRcdFx0XHRcdFx0Ui5hbHdheXMob2JqKSxcblx0XHRcdFx0XHRcdFx0XHRSLmludm9rZXIobGVuZ3RoLCBtZXRoU3RyKSksXG5cdFx0XHRcdFx0XHRcdFx0YXJncyk7XG5cdFx0XHRcdFx0XHR9KTtcbiIsIi8qZ2xvYmFsICQsIFIqL1xuXG4vKipcbiAqIEBwYXJhbSB7bnVtYmVyfSBsZW5ndGg6IEFyaXR5IG9mIGZuLlxuICogQHBhcmFtIHthcnJheX0gYXJncyAtIExpc3Qgb2YgYXJndW1lbnRzIHdoaWNoIHdpbGwgYmUgc3BsaXQgaW4gYXJyYXlzIG9mXG4gKiAgJ2xlbmd0aCcgbGVuZ3RoLlxuICovXG52YXIgcmVwZWF0QXBwbHkgPSBSLmN1cnJ5KChsZW5ndGgsIGZuLCBhcmdzKSA9PiBtYXAoXG5cdFIuYXBlcnR1cmUobGVuZ3RoKSxcblx0Ui5hcHBseShmbikpKTtcblxudmFyIHJlcGVhdENhbGwgPSBSLnBhcnRpYWwoXG5cdFIuY29tcG9zZShSLmFwcGx5KHJlcGVhdEFwcGx5KSxcblx0XHRcdCAgUi5jb25jYXQpKTtcblxudmFyIGdldENzcyA9IFIuaW52b2tlcigxLCAnc3R5bGUnKTtcbnZhciBzZXRDc3MgPSBmbHVlbnRpemUoMiwgJ3N0eWxlJyk7XG5cbnZhciBnZXRBdHRyID0gUi5pbnZva2VyKDEsICdnZXRBdHRyaWJ1dGUnKTtcbnZhciBzZXRBdHRyID0gZmx1ZW50aXplKDIsICdzZXRBdHRyaWJ1dGUnKTtcblxudmFyIHdpZHRoID0gUi5wcm9wKCdjbGllbnRXaWR0aCcpO1xudmFyIGhlaWdodCA9IFIucHJvcCgnY2xpZW50V2lkdGgnKTtcbiIsIi8qZ2xvYmFsICQsIFIqL1xuXG5mdW5jdGlvbiBjcmVhdGVDYW52YXMoKSB7XG4gIHZhciBjYW52YXMgPSBzZXRBdHRyKGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2NhbnZhcycpLFxuXHRcdFx0XHRcdCAgICdpZCcsICdtYWluQ2FudmFzJyk7XG4gIC8qLmF0dHIoe1xuXHQnd2lkdGgnOiAgJzYwMHB4Jyxcblx0J2hlaWdodCc6ICczNTBweCdcbiAgfSkuY3NzKHtcbiAgICAnYm9yZGVyJzogJzFweCBzb2xpZCAjZWVlZWVlJyxcbiAgICAnbWFyZ2luJzogJzAgYXV0bydcbiAgfSk7Ki9cbiAgcmV0dXJuIGNhbnZhcztcbn1cblxuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xudmFyIHZlYyA9IGZ1bmN0aW9uIHZlY3RvcjIoeCwgeSkge1xuICByZXR1cm4geyB4OiB4LCB5OiB5IH07XG59O1xuXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbnZhciBjYW52YXMgPSBjcmVhdGVDYW52YXMoKTtcblxudmFyIGMgPSBjYW52YXMuZ2V0Q29udGV4dCgnMmQnKTtcblxuYy5pbWFnZVNtb290aGluZ0VuYWJsZWQgPSBmYWxzZTtcblxuLyoqXG4gKiBAcGFyYW0ge0NhbnZhc1JlbmRlcmluZ0NvbnRleHQyRH0gY29udGV4dCAtIFJlbmRlcmluZyBjb250ZXh0XG4gKiBAcGFyYW0ge3N0cmluZ30gY29sb3IgLSBDU1Mgc3R5bGUgY29sb3JcbiAqIEBwYXJhbSB7VmVjdG9yMn0gc2l6ZSAtIFdpZHRoIGFuZCBoZWlnaHQgaW4gcGl4ZWxzXG4gKiBAcGFyYW0ge1ZlY3RvcjJ9IHBvcyAtIFRvcC1sZWZ0IGNvcm5lciBwb3NpdGlvbiBpbiBwaXhlbHNcbiAqL1xudmFyIGRyYXdSZWMgPSBSLmN1cnJ5KGZ1bmN0aW9uKGNvbnRleHQsIGNvbG9yLCBzaXplLCBwb3MpIHtcbiAgY29udGV4dC5maWxsU3R5bGUgPSBjb2xvcjtcbiAgY29udGV4dC5maWxsUmVjdChwb3MueCwgcG9zLnksIHNpemUueCwgc2l6ZS55KTtcbn0pKGMpO1xuXG5kcmF3UmVjKCdyZ2JhKDI1NSwgMTcwLCAyMDAsIDAuNSknLCB2ZWMoODAsIDgwKSwgdmVjKDM1LCAzMCkpO1xuXG5jLmZpbGxTdHlsZSA9ICdyZ2JhKDIwMCwgMjU1LCAxNzAsIDAuNyknO1xuYy5maWxsUmVjdCgxMCwgMTAsIDgwLCA4MCk7XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
